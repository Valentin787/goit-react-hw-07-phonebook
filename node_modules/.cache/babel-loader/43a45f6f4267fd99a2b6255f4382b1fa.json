{"ast":null,"code":"// import { useState } from 'react';\n// import { useSelector,useDispatch } from 'react-redux';\n// import { filterContacts } from 'redux/phoneBook/phoneBookActions';\n// import {contactsState,filterPhoneBook} from '../../redux/phoneBook/phonebook-selectors'\nimport Input from'../../common/Input';import{jsx as _jsx}from\"react/jsx-runtime\";function Filter(_ref){var filterChangeInput=_ref.filterChangeInput,value=_ref.value;// const [filterValue, setFilterValue] = useState(\"\");\n// const zeroContact = useSelector(contactsState);\n// const filterValue = useSelector(filterPhoneBook);\n// const dispatch = useDispatch()\n// const getFilterValue = () => dispatch(filterContacts(filterValue));\n// getFilterValue()\nreturn/*#__PURE__*/_jsx(Input,{label:\"Find contacts by name\",type:\"text\",onChange:function onChange(event){return filterChangeInput(event.target.value);}// onChange={(event)=>dispatch(filterContacts(event.target.value))}\n,name:\"filter\",value:value});}export default Filter;","map":{"version":3,"names":["Input","Filter","filterChangeInput","value","event","target"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import { useSelector,useDispatch } from 'react-redux';\n// import { filterContacts } from 'redux/phoneBook/phoneBookActions';\n// import {contactsState,filterPhoneBook} from '../../redux/phoneBook/phonebook-selectors'\n\nimport Input from '../../common/Input';\n\nfunction Filter({filterChangeInput,value}) {\n  // const [filterValue, setFilterValue] = useState(\"\");\n\n  // const zeroContact = useSelector(contactsState);\n  // const filterValue = useSelector(filterPhoneBook);\n\n  // const dispatch = useDispatch()\n  // const getFilterValue = () => dispatch(filterContacts(filterValue));\n  // getFilterValue()\n  \n\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={(event)=>filterChangeInput(event.target.value)}\n      // onChange={(event)=>dispatch(filterContacts(event.target.value))}\n      name=\"filter\"\n      value={value}\n    />\n  );\n}\n\nFilter.propTypes = {\n  onChangeDate: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n\n"],"mappings":"AACA;AACA;AACA;AACA;AAEA,MAAOA,MAAP,KAAkB,oBAAlB,C,2CAEA,QAASC,OAAT,MAA2C,IAA1BC,kBAA0B,MAA1BA,iBAA0B,CAARC,KAAQ,MAARA,KAAQ,CACzC;AAEA;AACA;AAEA;AACA;AACA;AAGA,mBACE,KAAC,KAAD,EACE,KAAK,CAAC,uBADR,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAE,kBAACC,KAAD,QAASF,kBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaF,KAAd,CAA1B,EACV;AAJF,CAKE,IAAI,CAAC,QALP,CAME,KAAK,CAAEA,KANT,EADF,CAUD,CAOD,cAAeF,OAAf"},"metadata":{},"sourceType":"module"}