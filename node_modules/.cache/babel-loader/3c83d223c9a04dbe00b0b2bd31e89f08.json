{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/src/components/App/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Loader from '../../common/Loader';\nimport { getContacts, addContact, deleteContact } from 'redux/phoneBook/operation';\nimport { filterContacts } from 'redux/phoneBook/phoneBookActions';\nimport { contactsState, filterPhoneBook, loadingSelector } from '../../redux/phoneBook/phonebook-selectors';\nimport { ToastContainer, toast } from 'react-toastify/dist/react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport s from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const loading = useSelector(loadingSelector);\n  const contactsBook = useSelector(contactsState);\n  const filterValueName = useSelector(filterPhoneBook);\n  const dispatch = useDispatch();\n  const [newContact, setNewContact] = useState(null);\n  const [deleteContactId, setDeleteContactId] = useState(null); //GET_CONTACTS\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]); //ADD_CONTACT\n\n  const confirmContact = contact => setNewContact(contact);\n\n  useEffect(() => {\n    if (!newContact) return;\n    const isHaveName = contactsBook.some(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === newContact.name;\n    });\n\n    if (isHaveName) {\n      toast.error(`Контакт з ${newContact.name} вже існує :((`, {\n        icon: `❌`\n      });\n      setNewContact(null);\n    }\n\n    if (!isHaveName) {\n      dispatch(addContact(newContact));\n      toast.success(`Контакт  ${newContact.name} добавлено до списку контактів :))`, {\n        icon: `✅`\n      });\n      setNewContact(null);\n    }\n  }, [contactsBook, dispatch, newContact]); // FILTER CITY\n\n  const filterChangeInput = value => dispatch(filterContacts(value)); //Варіант з хуком USE MEMO\n\n\n  const filterContactsName = useMemo(() => {\n    const normalizedFilter = filterValueName.toLowerCase();\n    const finalArray = contactsBook && contactsBook.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n    if (finalArray.length === 0 && filterValueName !== \"\") {\n      toast.info(`Усі контакти по запиту \"${filterValueName.toUpperCase()}\" були видалені ...✋!!`);\n      toast.warning(`Очистіть поле для запиту, щоб побачити усі контакти :)))`); // dispatch(filterContacts(\"\"))\n    }\n\n    return finalArray;\n  }, [contactsBook, filterValueName]); //DELETE_CONTACT \n\n  const onDeleteContact = useCallback(id => setDeleteContactId(id), []);\n  useEffect(() => {\n    if (!deleteContactId) return;\n    dispatch(deleteContact(deleteContactId));\n    toast.success(`Контакт видалений зі списку контактів :))`, {\n      icon: `❎`\n    });\n    setDeleteContactId(null);\n  }, [deleteContactId, dispatch]);\n\n  const normalizeName = name => name.split(' ').map(word => {\n    const firstUpCaseLetter = word.charAt(0).toUpperCase();\n    const anoterLetter = word.substring(1);\n    return `${firstUpCaseLetter}${anoterLetter}`;\n  }).join(' ');\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.app,\n      children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n        confirmContact: confirmContact,\n        normalizeName: normalizeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 8\n      }, this), contactsBook.length > 0 && /*#__PURE__*/_jsxDEV(Filter, {\n        filterChangeInput: filterChangeInput,\n        value: filterValueName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), !contactsBook.length && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please, add contact!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        filterContactsName: filterContactsName,\n        onDeleteContact: onDeleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        theme: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // const memoize = fn => {\n//   const cashe = {};\n//   return (...args) => {\n//     console.log(`-------------------------`);\n//     console.log(`arg->>`, args);\n//     const stringifiedArgs = JSON.stringify(args);\n//     console.log(`stringifiedArgs->>>`, stringifiedArgs);\n//     console.log(`cashe ->>>`, cashe);\n//     if (cashe[stringifiedArgs]) {\n//       return cashe[stringifiedArgs];\n//     }\n//     cashe[stringifiedArgs] = fn(...args);\n//     return cashe[stringifiedArgs]\n//   }\n// }\n// const multiply = (a, b, c) => {\n//   console.log(`multiply`);\n//   return a * b * c;\n// }\n// const add = (a, b, c) => {\n//   console.log(`add`);\n//   return a + b + c;\n// }\n// const memoizeMultiply = memoize(multiply);\n// const memoizeAdd = memoize(add);\n// console.log(memoizeMultiply(1, 2, 3));\n// console.log(memoizeMultiply(2, 3, 4));\n// console.log(memoizeAdd(1, 2, 3));\n// console.log(memoizeAdd(2, 3, 4));\n// console.log(memoizeMultiply(1, 2, 3));\n// console.log(memoizeMultiply(2, 3, 4));\n// console.log(memoizeAdd(1, 2, 3));\n// console.log(memoizeAdd(2, 3, 4));\n\n\n_s(App, \"4scmWu9JGtzHcjXyabmon/5xyCQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\nconst salaries1 = {\n  Manager: {\n    salary: 1000,\n    tax: \"10%\"\n  },\n  Designer: {\n    salary: 600,\n    tax: \"30%\"\n  },\n  Artist: {\n    salary: 1500,\n    tax: \"15%\"\n  }\n};\nconst team1 = [{\n  name: \"Misha\",\n  specialization: \"Manager\"\n}, {\n  name: \"Max\",\n  specialization: \"Designer\"\n}, {\n  name: \"Vova\",\n  specialization: \"Designer\"\n}, {\n  name: \"Leo\",\n  specialization: \"Artist\"\n}];\n\nconst calculateTeamFinanceReport = (salaries, team) => {\n  let arr = [];\n  let name = [];\n  let totalBudgetTeam = 0;\n  let totalBudgetManager = 0;\n  let totalBudgetDesigner = 0;\n  let totalBudgetArtist = 0; // arr[objName] = objValue;\n\n  const objValues = Object.keys(salaries1.map(item => arr.push(item)));\n  console.log(objValues);\n  const objEntries = Object.entries(salaries1);\n  console.log(objEntries);\n};\n\nconst financeReport1 = calculateTeamFinanceReport(salaries1, team1);\nconsole.log(JSON.stringify(financeReport1)); // {\n// totalBudgetTeam: 3398, // total salaries with tax of entire team; should be integer\n// (truncate the fractional part after all calculations)\n// totalBudgetProgger: 1176, // total salaries with tax for all members by 'Progger'\n// specialization; should be integer (truncate the fractional part after all calculations)\n// totalBudgetTester: 2222, // total salaries with tax for all members by 'Tester'\n// specialization; should be integer (truncate the fractional part after all calculations)\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useCallback","useMemo","useDispatch","useSelector","ContactForm","ContactList","Filter","Loader","getContacts","addContact","deleteContact","filterContacts","contactsState","filterPhoneBook","loadingSelector","ToastContainer","toast","s","App","loading","contactsBook","filterValueName","dispatch","newContact","setNewContact","deleteContactId","setDeleteContactId","confirmContact","contact","isHaveName","some","name","error","icon","success","filterChangeInput","value","filterContactsName","normalizedFilter","toLowerCase","finalArray","filter","includes","length","info","toUpperCase","warning","onDeleteContact","id","normalizeName","split","map","word","firstUpCaseLetter","charAt","anoterLetter","substring","join","app","salaries1","Manager","salary","tax","Designer","Artist","team1","specialization","calculateTeamFinanceReport","salaries","team","arr","totalBudgetTeam","totalBudgetManager","totalBudgetDesigner","totalBudgetArtist","objValues","Object","keys","item","push","console","log","objEntries","entries","financeReport1","JSON","stringify"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/src/components/App/App.jsx"],"sourcesContent":["import { useEffect,useState,useCallback,useMemo} from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Loader from '../../common/Loader';\n\nimport { getContacts,addContact, deleteContact  } from 'redux/phoneBook/operation';\nimport { filterContacts } from 'redux/phoneBook/phoneBookActions';\nimport { contactsState, filterPhoneBook, loadingSelector } from '../../redux/phoneBook/phonebook-selectors'\n\nimport { ToastContainer,toast } from 'react-toastify/dist/react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport s from './App.module.css';\n\nconst App = () => {\n\n  const loading = useSelector(loadingSelector);\n  const contactsBook = useSelector(contactsState);\n  const filterValueName = useSelector(filterPhoneBook);\n  const dispatch = useDispatch();\n\n  const [newContact, setNewContact] = useState(null);\n  const [deleteContactId, setDeleteContactId] = useState(null);\n\n  //GET_CONTACTS\n\n  useEffect(() => {\n    dispatch(getContacts())\n  }, [dispatch])\n  \n  //ADD_CONTACT\n  const confirmContact = (contact) => setNewContact(contact);\n\n  useEffect(() => {\n    if (!newContact) return;\n    const isHaveName = contactsBook.some(({ name }) => name === newContact.name);\n\n    if (isHaveName) {\n      toast.error(`Контакт з ${newContact.name} вже існує :((`, { icon: `❌` });\n      setNewContact(null);\n    }\n    if (!isHaveName) {\n      dispatch(addContact(newContact));\n      toast.success(`Контакт  ${newContact.name} добавлено до списку контактів :))`, {\n        icon: `✅`\n      });\n      setNewContact(null);\n    }\n  }, [contactsBook, dispatch, newContact]);\n\n  // FILTER CITY\n\n  const filterChangeInput = (value) => dispatch(filterContacts(value))\n  \n  //Варіант з хуком USE MEMO\n  const filterContactsName = useMemo(() => {\n    const normalizedFilter = filterValueName.toLowerCase();\n\n    const finalArray = contactsBook && contactsBook.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n\n    if (finalArray.length === 0 && filterValueName !== \"\") {\n      toast.info(`Усі контакти по запиту \"${filterValueName.toUpperCase()}\" були видалені ...✋!!`)\n      toast.warning(`Очистіть поле для запиту, щоб побачити усі контакти :)))`)\n      // dispatch(filterContacts(\"\"))\n    }\n    return finalArray;\n  }, [contactsBook, filterValueName]);\n  \n  //DELETE_CONTACT \n\n  const onDeleteContact = useCallback((id) => setDeleteContactId(id),[]);\n\n  useEffect(() => {\n    if (!deleteContactId) return;\n    dispatch(deleteContact(deleteContactId));\n    toast.success(`Контакт видалений зі списку контактів :))`, {\n        icon: `❎`\n      });\n    setDeleteContactId(null);\n\n  }, [deleteContactId, dispatch])\n  \n  \n \n  const normalizeName = name => name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  return (\n    <>\n      {loading && <Loader loading={loading}/>}\n      <div className={s.app}>\n      \n      {<ContactForm\n        confirmContact={confirmContact}\n        normalizeName={normalizeName}\n      />}\n    {contactsBook.length > 0 && (\n        <Filter\n          filterChangeInput={filterChangeInput}\n          value={filterValueName}\n      />\n  )}\n    {!contactsBook.length && !loading && <p>Please, add contact!</p>}\n      <ContactList\n        filterContactsName={filterContactsName}\n        onDeleteContact={onDeleteContact}\n      />\n      <ToastContainer theme=\"dark\"/>\n    </div>\n    </>\n    \n\n  );\n};\n\n\n// const memoize = fn => {\n//   const cashe = {};\n\n//   return (...args) => {\n//     console.log(`-------------------------`);\n//     console.log(`arg->>`, args);\n//     const stringifiedArgs = JSON.stringify(args);\n//     console.log(`stringifiedArgs->>>`, stringifiedArgs);\n//     console.log(`cashe ->>>`, cashe);\n//     if (cashe[stringifiedArgs]) {\n//       return cashe[stringifiedArgs];\n//     }\n\n//     cashe[stringifiedArgs] = fn(...args);\n\n//     return cashe[stringifiedArgs]\n//   }\n// }\n\n// const multiply = (a, b, c) => {\n//   console.log(`multiply`);\n//   return a * b * c;\n// }\n\n// const add = (a, b, c) => {\n//   console.log(`add`);\n//   return a + b + c;\n// }\n\n// const memoizeMultiply = memoize(multiply);\n// const memoizeAdd = memoize(add);\n\n// console.log(memoizeMultiply(1, 2, 3));\n// console.log(memoizeMultiply(2, 3, 4));\n\n// console.log(memoizeAdd(1, 2, 3));\n// console.log(memoizeAdd(2, 3, 4));\n\n// console.log(memoizeMultiply(1, 2, 3));\n// console.log(memoizeMultiply(2, 3, 4));\n\n// console.log(memoizeAdd(1, 2, 3));\n// console.log(memoizeAdd(2, 3, 4));\n\nexport default App;\n\nconst salaries1 = {\nManager: { salary: 1000, tax: \"10%\" },\nDesigner: { salary: 600, tax: \"30%\" },\nArtist: { salary: 1500, tax: \"15%\" },}\nconst team1 = [\n{ name: \"Misha\", specialization: \"Manager\" },\n{ name: \"Max\", specialization: \"Designer\" },\n{ name: \"Vova\", specialization: \"Designer\"},\n{ name: \"Leo\", specialization: \"Artist\"},]\n\nconst calculateTeamFinanceReport = (salaries, team) => {\n\n  let arr = [];\n  let name = [];\n  let totalBudgetTeam = 0;\n  let totalBudgetManager = 0;\n  let totalBudgetDesigner = 0;\n  let totalBudgetArtist = 0;\n\n\n  // arr[objName] = objValue;\n  const objValues = Object.keys(salaries1.map(item => arr.push(item)))\n  console.log(objValues);\n  const objEntries = Object.entries(salaries1);\n  console.log(objEntries);\n\n  \n  \n}\n\n\nconst financeReport1 = calculateTeamFinanceReport(salaries1, team1)\nconsole.log(JSON.stringify(financeReport1))\n\n\n// {\n// totalBudgetTeam: 3398, // total salaries with tax of entire team; should be integer\n// (truncate the fractional part after all calculations)\n// totalBudgetProgger: 1176, // total salaries with tax for all members by 'Progger'\n// specialization; should be integer (truncate the fractional part after all calculations)\n// totalBudgetTester: 2222, // total salaries with tax for all members by 'Tester'\n// specialization; should be integer (truncate the fractional part after all calculations)"],"mappings":"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"},"metadata":{},"sourceType":"module"}