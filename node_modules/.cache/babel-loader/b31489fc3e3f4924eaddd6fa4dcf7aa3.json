{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx\";\nimport PropTypes from 'prop-types'; // import { useState } from 'react';\n// import { useSelector,useDispatch } from 'react-redux';\n// import { filterContacts } from 'redux/phoneBook/phoneBookActions';\n// import {contactsState,filterPhoneBook} from '../../redux/phoneBook/phonebook-selectors'\n\nimport Input from '../../common/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Filter(_ref) {\n  let {\n    filterChangeInput,\n    value\n  } = _ref;\n  // const [filterValue, setFilterValue] = useState(\"\");\n  // const zeroContact = useSelector(contactsState);\n  // const filterValue = useSelector(filterPhoneBook);\n  // const dispatch = useDispatch()\n  // const getFilterValue = () => dispatch(filterContacts(filterValue));\n  // getFilterValue()\n  return /*#__PURE__*/_jsxDEV(Input, {\n    label: \"Find contacts by name\",\n    type: \"text\",\n    onChange: event => filterChangeInput(event.target.value) // onChange={(event)=>dispatch(filterContacts(event.target.value))}\n    ,\n    name: \"filter\",\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Filter;\nFilter.propTypes = {\n  onChangeDate: PropTypes.func,\n  value: PropTypes.string\n};\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["PropTypes","Input","Filter","filterChangeInput","value","event","target","propTypes","onChangeDate","func","string"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import { useSelector,useDispatch } from 'react-redux';\n// import { filterContacts } from 'redux/phoneBook/phoneBookActions';\n// import {contactsState,filterPhoneBook} from '../../redux/phoneBook/phonebook-selectors'\n\nimport Input from '../../common/Input';\n\nfunction Filter({filterChangeInput,value}) {\n  // const [filterValue, setFilterValue] = useState(\"\");\n\n  // const zeroContact = useSelector(contactsState);\n  // const filterValue = useSelector(filterPhoneBook);\n\n  // const dispatch = useDispatch()\n  // const getFilterValue = () => dispatch(filterContacts(filterValue));\n  // getFilterValue()\n  \n\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={(event)=>filterChangeInput(event.target.value)}\n      // onChange={(event)=>dispatch(filterContacts(event.target.value))}\n      name=\"filter\"\n      value={value}\n    />\n  );\n}\n\nFilter.propTypes = {\n  onChangeDate: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;AACA;AACA;AACA;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,MAAT,OAA2C;EAAA,IAA3B;IAACC,iBAAD;IAAmBC;EAAnB,CAA2B;EACzC;EAEA;EACA;EAEA;EACA;EACA;EAGA,oBACE,QAAC,KAAD;IACE,KAAK,EAAC,uBADR;IAEE,IAAI,EAAC,MAFP;IAGE,QAAQ,EAAGC,KAAD,IAASF,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaF,KAAd,CAHtC,CAIE;IAJF;IAKE,IAAI,EAAC,QALP;IAME,KAAK,EAAEA;EANT;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KArBQF,M;AAuBTA,MAAM,CAACK,SAAP,GAAmB;EACjBC,YAAY,EAAER,SAAS,CAACS,IADP;EAEjBL,KAAK,EAAEJ,SAAS,CAACU;AAFA,CAAnB;AAKA,eAAeR,MAAf"},"metadata":{},"sourceType":"module"}