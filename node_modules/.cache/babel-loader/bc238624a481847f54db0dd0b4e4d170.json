{"ast":null,"code":"import _slicedToArray from\"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import Input from'../../common/Input';import{nanoid}from'nanoid';import s from'./ContactForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ContactForm=function ContactForm(_ref){var confirmContact=_ref.confirmContact,normalizeName=_ref.normalizeName;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),number=_useState4[0],setNumber=_useState4[1];var onSubFormData=function onSubFormData(e){e.preventDefault();var objData={id:nanoid(),name:normalizeName(name),number:number};confirmContact(objData);resetForm();};var resetForm=function resetForm(){setName('');setNumber('');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Phonebook\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubFormData,className:s.form,children:[/*#__PURE__*/_jsx(Input,{label:\"Name\",type:\"text\",name:\"name\",onChange:function onChange(e){return setName(e.target.value);},value:name,pattern:\"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",title:\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",required:true}),/*#__PURE__*/_jsx(Input,{label:\"Number\",type:\"tel\",name:\"number\",onChange:function onChange(e){return setNumber(e.target.value);},value:number,pattern:\"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",title:\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",required:true}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:s.btnAdd,children:[' ',\"Add contact\"]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"})]});};export default ContactForm;","map":{"version":3,"names":["useState","Input","nanoid","s","ContactForm","confirmContact","normalizeName","name","setName","number","setNumber","onSubFormData","e","preventDefault","objData","id","resetForm","form","target","value","btnAdd"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { useState } from 'react';\nimport Input from '../../common/Input';\nimport { nanoid } from 'nanoid';\nimport s from './ContactForm.module.css';\n\n\nconst ContactForm = ({confirmContact,normalizeName}) => {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objData = {\n      id: nanoid(),\n      name:normalizeName(name),\n      number\n    };\n\n    confirmContact(objData);\n    resetForm();\n\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <form onSubmit={onSubFormData} className={s.form}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        onChange={(e) => setNumber(e.target.value)}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={s.btnAdd}>\n        {' '}\n        Add contact\n      </button>\n      </form>\n      <h2>Contacts</h2>\n    </>\n\n  );\n};\n\nexport default ContactForm;\n\n"],"mappings":"8JAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,MAAP,KAAkB,oBAAlB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,MAAOC,EAAP,KAAc,0BAAd,C,6IAGA,GAAMC,YAAW,CAAG,QAAdA,YAAc,MAAoC,IAAlCC,eAAkC,MAAlCA,cAAkC,CAAnBC,aAAmB,MAAnBA,aAAmB,CAEtD,cAAwBN,QAAQ,CAAC,EAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eACA,eAA4BR,QAAQ,CAAC,EAAD,CAApC,yCAAOS,MAAP,eAAeC,SAAf,eAEA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,CAAAC,CAAC,CAAI,CACzBA,CAAC,CAACC,cAAF,GAEA,GAAMC,QAAO,CAAG,CACdC,EAAE,CAAEb,MAAM,EADI,CAEdK,IAAI,CAACD,aAAa,CAACC,IAAD,CAFJ,CAGdE,MAAM,CAANA,MAHc,CAAhB,CAMAJ,cAAc,CAACS,OAAD,CAAd,CACAE,SAAS,GAEV,CAZD,CAaA,GAAMA,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtBR,OAAO,CAAC,EAAD,CAAP,CACAE,SAAS,CAAC,EAAD,CAAT,CACD,CAHD,CAKA,mBACE,wCACE,iCADF,cAEE,cAAM,QAAQ,CAAEC,aAAhB,CAA+B,SAAS,CAAER,CAAC,CAACc,IAA5C,wBACA,KAAC,KAAD,EACE,KAAK,CAAC,MADR,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,MAHP,CAIE,QAAQ,CAAE,kBAACL,CAAD,QAAOJ,QAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAd,EAJZ,CAKE,KAAK,CAAEZ,IALT,CAME,OAAO,CAAC,wHANV,CAOE,KAAK,CAAC,wIAPR,CAQE,QAAQ,KARV,EADA,cAYA,KAAC,KAAD,EACE,KAAK,CAAC,QADR,CAEE,IAAI,CAAC,KAFP,CAGE,IAAI,CAAC,QAHP,CAIE,QAAQ,CAAE,kBAACK,CAAD,QAAOF,UAAS,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAhB,EAJZ,CAKE,KAAK,CAAEV,MALT,CAME,OAAO,CAAC,wFANV,CAOE,KAAK,CAAC,8FAPR,CAQE,QAAQ,KARV,EAZA,cAuBA,gBAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAEN,CAAC,CAACiB,MAAnC,WACG,GADH,iBAvBA,GAFF,cA8BE,gCA9BF,GADF,CAmCD,CA1DD,CA4DA,cAAehB,YAAf"},"metadata":{},"sourceType":"module"}