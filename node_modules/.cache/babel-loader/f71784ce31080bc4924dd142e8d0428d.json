{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from 'redux-logger';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\nconst logger = createLogger({\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n  timestamp: false,\n  duration: true\n});\nconst persistContactsConfig = {\n  key: 'contacts/filter',\n  storage,\n  whitelist: ['filter']\n};\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistContactsConfig, phoneBookReducer)\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["configureStore","createLogger","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","phoneBookReducer","logger","collapsed","getState","action","logEntry","error","timestamp","duration","persistContactsConfig","key","whitelist","store","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","persistor"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-07-phonebook/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from 'redux-logger'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\n\nimport storage from 'redux-persist/lib/storage' \n\n\nimport phoneBookReducer from './phoneBook/phoneBookReducer'\n\nconst logger = createLogger({\n\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n  timestamp: false,\n  duration:true,\n});\n\nconst persistContactsConfig = {\n  key: 'contacts/filter',\n  storage,\n  whitelist: ['filter']\n}\n\nconst store = configureStore({\n  reducer: {\n    \n    contacts: persistReducer(persistContactsConfig, phoneBookReducer),\n   \n    \n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n})\n    \n const persistor = persistStore(store)\n\n\nexport {store,persistor} \n\n\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAWA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,MAAMC,MAAM,GAAGX,YAAY,CAAC;EAE1BY,SAAS,EAAE,CAACC,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,KAAgC,CAACA,QAAQ,CAACC,KAF3B;EAG1BC,SAAS,EAAE,KAHe;EAI1BC,QAAQ,EAAC;AAJiB,CAAD,CAA3B;AAOA,MAAMC,qBAAqB,GAAG;EAC5BC,GAAG,EAAE,iBADuB;EAE5BX,OAF4B;EAG5BY,SAAS,EAAE,CAAC,QAAD;AAHiB,CAA9B;AAMA,MAAMC,KAAK,GAAGvB,cAAc,CAAC;EAC3BwB,OAAO,EAAE;IAEPC,QAAQ,EAAEtB,cAAc,CAACiB,qBAAD,EAAwBT,gBAAxB;EAFjB,CADkB;EAO3Be,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,CAAC;IACzDC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACzB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADsC,CAAD,CAApB,CAInCqB,MAJmC,CAI5BlB,MAJ4B,CAPX;EAY3BmB,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAZR,CAAD,CAA5B;AAeC,MAAMC,SAAS,GAAGjC,YAAY,CAACqB,KAAD,CAA9B;AAGD,SAAQA,KAAR,EAAcY,SAAd"},"metadata":{},"sourceType":"module"}