{"version":3,"sources":["common/Input/Input.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ItemContact/ItemContact.module.css","common/Loader/Loader.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","utils/api-fetch.js","redux/phoneBook/operation.js","common/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ItemContact/ItemContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","common/Loader/Loader.jsx","redux/phoneBook/phoneBookActions.js","redux/phoneBook/phonebook-selectors.js","components/App/App.jsx","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["module","exports","BASE_URL","fetchData","path","options","fetch","res","ok","json","Promise","reject","Error","statusText","API_ENDPOINT","getContacts","createAsyncThunk","addContact","newDepartment","endpoint","item","finalOptions","method","body","JSON","stringify","headers","saveItem","deleteContact","deleteDepartment","id","deleteItem","Input","label","arg","useRef","nanoid","current","className","s","wrapperInput","labelTitle","htmlFor","input","ContactForm","confirmContact","normalizeName","useState","name","setName","number","setNumber","resetForm","onSubmit","e","preventDefault","objData","form","type","onChange","target","value","pattern","title","required","btnAdd","ItemContact","onDeleteContact","btnDel","onClick","ContactList","filterContactsName","list","map","Filter","filterChangeInput","event","loader","document","querySelector","Loader","loading","createPortal","wrapLoader","modal","height","width","radius","margin","color","size","filterContacts","createAction","contactsState","state","contacts","data","loadingSelector","filterPhoneBook","filter","App","useSelector","contactsBook","filterValueName","dispatch","useDispatch","newContact","setNewContact","deleteContactId","setDeleteContactId","useEffect","isHaveName","some","toast","error","icon","success","useMemo","normalizedFilter","toLowerCase","finalArray","contact","includes","length","info","toUpperCase","warning","useCallback","app","split","word","firstUpCaseLetter","charAt","anoterLetter","substring","join","theme","contactsItemReducer","createReducer","builder","addCase","fulfilled","_","payload","loadingReducer","pending","rejected","errorReducer","filterContactsReducer","dataReducer","combineReducers","phoneBookReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e4ce1ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"Input_wrapperInput__1WYXU\",\"labelTitle\":\"Input_labelTitle__3bDB-\",\"input\":\"Input_input__KAHKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemContact_item__13Q_8\",\"btnDel\":\"ItemContact_btnDel__2IseJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapLoader\":\"Loader_wrapLoader__1iiMv\",\"modal\":\"Loader_modal__3eZ6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","\nconst BASE_URL = \"https://621e9d00849220b1fc9db0af.mockapi.io/api/phone/contacts\";\n\nconst fetchData = async (path, options = {}) => {\n  const res = await fetch(`${BASE_URL}/${path}`, options);\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst getItems = (endpoint, options) => fetchData(endpoint, options);\n\nconst saveItem = (endpoint, item, options = {}) => {\n\n  const finalOptions = {\n    method: \"POST\",\n\n    body: JSON.stringify(item),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    ...options,\n  };\n  return fetchData(endpoint, finalOptions);\n};\n\n\nconst deleteItem = (endpoint, id, options = {}) =>\n  fetchData(`${endpoint}/${id}`, { method: \"DELETE\", ...options });\n\nexport { getItems, saveItem, deleteItem };","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getItems, saveItem, deleteItem } from '../../utils/api-fetch';\n\nconst API_ENDPOINT = \"/contacts\";\n\nconst getContacts = createAsyncThunk('contacts/getContactsStatus', () => getItems(API_ENDPOINT)\n);\n\nconst addContact = createAsyncThunk('contact/addContactStatus', (newDepartment) => saveItem(API_ENDPOINT, newDepartment));\n\nconst deleteContact = createAsyncThunk('contact/deleteContactStatus', (deleteDepartment) => deleteItem(API_ENDPOINT, deleteDepartment)\n);\nexport { getContacts,addContact,deleteContact };\n\n","import { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport s from './Input.module.css';\n\nconst Input = ({ label, ...arg }) => {\n  const { current: id } = useRef(nanoid());\n  return (\n    <div className={s.wrapperInput}>\n      <label className={s.labelTitle} htmlFor={id}>\n        {label}:\n      </label>\n      <input className={s.input} id={id} {...arg} />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string,\n  arg: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n};\n\nexport default Input;\n","// import {useDispatch, useSelector} from 'react-redux'\n// import {contactsState} from '../../redux/phoneBook/phonebook-selectors'\nimport { useState } from 'react';\nimport Input from '../../common/Input';\nimport { nanoid } from 'nanoid';\nimport s from './ContactForm.module.css';\n\n\nconst ContactForm = ({confirmContact,normalizeName}) => {\n  // const isLoading = useSelector((state) =>  state.contacts.isLoading)\n \n  // const contactsBook = useSelector(contactsState);\n  // console.log(contactsState());\n  // const dispatch = useDispatch()\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // const [dataForm, setdataForm] = useState({\n  //   name: '',\n  //   number: '',\n   \n  // });\n  // const addName = (e) => setName(e.target.value);\n  // const addNumber = (e) => setNumber(e.target.value);\n\n  // const addDataForm = e => {\n  //   return setdataForm(prevState => {\n  //     // console.log('prevState->>',prevState);\n  //     // return {\n  //     //   ...prevState, [e.target.name]: e.target.value,\n  //     return {[e.target.name]: e.target.value,\n  //   }});\n  // };\n\n  // console.log('dataForm', dataForm);\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objData = {\n      id: nanoid(),\n      name:normalizeName(name),\n      number\n    };\n\n    confirmContact(objData);\n    resetForm();\n\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n    // setdataForm({\n    //   name: '',\n    //   number: '',\n    // }\n  \n  // const { name, number } = dataForm;\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <form onSubmit={onSubFormData} className={s.form}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        onChange={(e) => setNumber(e.target.value)}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={s.btnAdd}>\n        {' '}\n        Add contact\n      </button>\n      {/* {isLoading && <h3>Loading ...</h3>} */}\n      </form>\n      <h2>Contacts</h2>\n    </>\n\n  );\n};\n\nexport default ContactForm;\n\n","import PropTypes from 'prop-types';\nimport s from './ItemContact.module.css';\n\nconst ItemContact = ({\n  onDeleteContact,\n  name,\n  number,\n  id}) => {\n\n  return (\n    <li className={s.item} id={id}>\n      {name}: {number}\n      <button\n        className={s.btnDel}\n        onClick={onDeleteContact}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onDeleteContact: PropTypes.func,\n  id:PropTypes.string,\n};\n\nexport default ItemContact;\n\n","import PropTypes from 'prop-types';\nimport ItemContact from './ItemContact';\nimport s from './ContactList.module.css';\n// import { useSelector } from 'react-redux';\n\nconst ContactList = ({onDeleteContact,filterContactsName}) => {\n  \n  // const contactsBook = useSelector((state) => state.contacts.item)\n  // const filterBookContacts = useSelector((state) => state.contacts.filter)\n  \n\n  // const filterContacts = word => {\n   \n  //   const arrayFilter = contactsBook.filter(({ name }) =>\n  //     name.toLowerCase().includes(word),\n  //   );\n  //   return arrayFilter;\n  // };\n  \n\n  return (\n    <ul className={s.list}>\n      {filterContactsName && filterContactsName.map(({ id, name, number }) => {\n        return (\n          <ItemContact\n            id={id}\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={()=>onDeleteContact(id)}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  filterContactsName: PropTypes.array,\n  // normalizeName: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import { useSelector,useDispatch } from 'react-redux';\n// import { filterContacts } from 'redux/phoneBook/phoneBookActions';\n// import {contactsState,filterPhoneBook} from '../../redux/phoneBook/phonebook-selectors'\n\nimport Input from '../../common/Input';\n\nfunction Filter({filterChangeInput,value}) {\n  // const [filterValue, setFilterValue] = useState(\"\");\n\n  // const zeroContact = useSelector(contactsState);\n  // const filterValue = useSelector(filterPhoneBook);\n\n  // const dispatch = useDispatch()\n  // const getFilterValue = () => dispatch(filterContacts(filterValue));\n  // getFilterValue()\n  \n\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={(event)=>filterChangeInput(event.target.value)}\n      // onChange={(event)=>dispatch(filterContacts(event.target.value))}\n      name=\"filter\"\n      value={value}\n    />\n  );\n}\n\nFilter.propTypes = {\n  onChangeDate: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n\n","import { createPortal } from \"react-dom\";\nimport HashLoader\n from \"react-spinners/HashLoader\";\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport s from \"./Loader.module.css\";\nconst loader = document.querySelector(\"#loader\");\n\n\nfunction Loader({loading}) {\n\n  return createPortal(\n    <div className={s.wrapLoader}>\n      <div className={s.modal}>\n        <HashLoader\n\n          height={15}\n          width={5}\n          radius={2}\n          margin={2}\n          color={\"#7814a0\"}\n          loading={loading}\n          size={80}\n        />\n      </div>\n    </div>,\n    loader\n  );\n\n}\n\nexport default Loader","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterContacts = createAction(\"contacts/filter\")\n\n// export const actionAddContacts = createAction(\"contacts/add\")\n// export const removeContacts = createAction(\"contacts/remove\")\n\n\n// export const addContactsRequest = createAction(\"contacts/addContactsRequest\");\n// export const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\n// export const addContactsError = createAction(\"contacts/addContactsError\");","export const contactsState = (state) => state.contacts.data.item;\nexport const loadingSelector = (state) => state.contacts.data.loading;\nexport const errorSelector = (state) => state.contacts.data.error;\nexport const filterPhoneBook = (state) => state.contacts.filter;\n","import { useEffect,useState,useCallback,useMemo} from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getContacts,addContact, deleteContact  } from 'redux/phoneBook/operation';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Loader from '../../common/Loader';\n\nimport { filterContacts } from 'redux/phoneBook/phoneBookActions';\nimport {contactsState,filterPhoneBook, loadingSelector} from '../../redux/phoneBook/phonebook-selectors'\nimport { ToastContainer,toast } from 'react-toastify/dist/react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport s from './App.module.css';\n\nconst App = () => {\n\n  const loading = useSelector(loadingSelector);\n  const contactsBook = useSelector(contactsState);\n  const filterValueName = useSelector(filterPhoneBook);\n  const dispatch = useDispatch();\n\n  const [newContact, setNewContact] = useState(null);\n  const [deleteContactId, setDeleteContactId] = useState(null);\n\n  //GET_CONTACTS\n\n  useEffect(() => {\n    dispatch(getContacts())\n  }, [dispatch])\n  \n  //ADD_CONTACT\n  const confirmContact = (contact) => setNewContact(contact);\n\n  useEffect(() => {\n    if (!newContact) return;\n    const isHaveName = contactsBook.some(({ name }) => name === newContact.name);\n\n    if (isHaveName) {\n      toast.error(`Контакт з ${newContact.name} вже існує :((`, { icon: `❌` });\n      setNewContact(null);\n    }\n    if (!isHaveName) {\n      dispatch(addContact(newContact));\n      toast.success(`Контакт  ${newContact.name} добавлено до списку контактів :))`, {\n        icon: `✅`\n      });\n      setNewContact(null);\n    }\n  }, [contactsBook, dispatch, newContact]);\n\n  // FILTER CITY\n\n  const filterChangeInput = (value) => dispatch(filterContacts(value))\n  \n  //Варіант з хуком USE MEMO\n  const filterContactsName = useMemo(() => {\n    const normalizedFilter = filterValueName.toLowerCase();\n\n    const finalArray = contactsBook && contactsBook.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n\n    if (finalArray.length === 0 && filterValueName !== \"\") {\n      toast.info(`Усі контакти по запиту \"${filterValueName.toUpperCase()}\" були видалені ...✋!!`)\n      toast.warning(`Очистіть поле для запиту, щоб побачити усі контакти :)))`)\n      dispatch(filterContacts(\"\"))\n    }\n    return finalArray;\n  }, [contactsBook, dispatch, filterValueName]);\n  \n  //DELETE_CONTACT \n\n  const onDeleteContact = useCallback((id) => setDeleteContactId(id),[]);\n\n  useEffect(() => {\n    if (!deleteContactId) return;\n    dispatch(deleteContact(deleteContactId));\n    toast.success(`Контакт видалений зі списку контактів :))`, {\n        icon: `❎`\n      });\n    setDeleteContactId(null);\n\n  }, [deleteContactId, dispatch])\n  \n  \n \n  const normalizeName = name => name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  return (\n    <>\n      {loading && <Loader loading={loading}/>}\n      <div className={s.app}>\n      \n      {<ContactForm\n        confirmContact={confirmContact}\n        normalizeName={normalizeName}\n      />}\n    {contactsBook.length > 0 && (\n        <Filter\n          filterChangeInput={filterChangeInput}\n          value={filterValueName}\n      />\n  )}\n    {!contactsBook.length && !loading && <p>Please, add contact!</p>}\n      <ContactList\n        filterContactsName={filterContactsName}\n        onDeleteContact={onDeleteContact}\n      />\n      <ToastContainer theme=\"dark\"/>\n    </div>\n    </>\n    \n\n  );\n};\n\n\nexport default App;\n","import {combineReducers,createReducer } from \"@reduxjs/toolkit\";\nimport { getContacts,addContact,deleteContact } from \"./operation\";\nimport { filterContacts } from './phoneBookActions';\n\nconst contactsItemReducer = createReducer([], (builder) => {\n  builder.addCase(getContacts.fulfilled, (_, { payload }) => payload);\n\n  builder.addCase(addContact.fulfilled, (state, { payload }) => [...state, payload]);\n\n\n\n  builder.addCase(deleteContact.fulfilled, (state, { payload }) => state.filter((item) => item.id !== payload.id\n  ));\n\n});\n\nconst loadingReducer = createReducer(false, (builder) => {\n  ///GET_CONTACTS\n  builder.addCase(getContacts.pending, () => true);\n  builder.addCase(getContacts.fulfilled, () => false);\n  builder.addCase(getContacts.rejected, () => false);\n  ///ADD_CONTACTS\n  builder.addCase(addContact.pending, () => true);\n  builder.addCase(addContact.fulfilled, () => false);\n  builder.addCase(addContact.rejected, () => false);\n  ///DELETE_CONTACTS\n  builder.addCase(deleteContact.pending, () => true);\n  builder.addCase(deleteContact.fulfilled, () => false);\n  builder.addCase(deleteContact.rejected, () => false);\n});\nconst errorReducer = createReducer(null,(builder) => {\n   ///GET_CONTACTS\n  builder.addCase(getContacts.pending, () => null);\n  builder.addCase(getContacts.rejected, (_,{payload}) => payload);\n  ///ADD_CONTACTS\n  builder.addCase(addContact.pending, () => null);\n  builder.addCase(addContact.rejected, (_,{payload}) => payload);\n  ///DELETE_CONTACTS\n  builder.addCase(deleteContact.pending, () => null);\n  builder.addCase(deleteContact.rejected, (_,{payload}) => payload);\n  \n})\n\nconst filterContactsReducer = createReducer('', (builder) => {\n  builder.addCase(filterContacts, (_, { payload }) => payload);\n})\n\nconst dataReducer = combineReducers({\n    item: contactsItemReducer,\n    loading: loadingReducer,\n    error: errorReducer\n})\nconst phoneBookReducer = combineReducers({\n    data:dataReducer,\n    filter: filterContactsReducer,\n    \n})\n\nexport default phoneBookReducer\n","// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import logger from 'redux-logger'\n// import storage from 'redux-persist/lib/storage'\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from './phoneBook/phoneBookReducer'\n\n\n// const persistConfig = {\n//   key: 'item',\n//   version: 1,\n//   storage,\n// }\n// Як працює міddlewar \n// const myLogger = store => next =>action=> {\n//   // console.log(`Mylogger => `, action)\n//   // console.log(`next =>`, next)\n//   console.log(`prevState =>`, store.getState().contacts.item)\n//   next(action)\n//   // console.log(`logger =>`,logger)\n//   console.log(`nextState =>`, store.getState().contacts.item)\n// }\n// const contactsPersistedReducer = persistReducer(persistConfig, phoneBookReducer)\n// console.log(`logger =>`,logger)\n\nconst store = configureStore ({\n  reducer: {\n    contacts: phoneBookReducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(\n      // {\n      // serializableCheck: {\n      //   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      // },\n      // }\n    ),\n      // .concat(logger),\n  devTools:process.env.NODE_ENV !== \"production\"\n})\n\n// export const persistor = persistStore(store)\n\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './components/App/App';\nimport store,{persistor} from 'redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <BrowserRouter>\n        <App />\n        </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}