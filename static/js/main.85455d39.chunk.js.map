{"version":3,"sources":["common/Input/Input.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ItemContact/ItemContact.module.css","common/Loader/Loader.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","utils/api-fetch.js","redux/phoneBook/operation.js","redux/phoneBook/phoneBookActions.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","common/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ItemContact/ItemContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","common/Loader/Loader.jsx","redux/phoneBook/phonebook-selectors.js","components/App/App.jsx","index.js"],"names":["module","exports","BASE_URL","fetchData","path","options","fetch","res","ok","json","Promise","reject","Error","statusText","API_ENDPOINT","getContacts","createAsyncThunk","addContact","newDepartment","endpoint","item","finalOptions","method","body","JSON","stringify","headers","saveItem","deleteContact","deleteDepartment","id","deleteItem","filterContacts","createAction","contactsItemReducer","createReducer","builder","addCase","fulfilled","_","payload","state","filter","loadingReducer","pending","rejected","errorReducer","filterContactsReducer","dataReducer","combineReducers","loading","error","phoneBookReducer","data","logger","createLogger","collapsed","getState","action","logEntry","timestamp","duration","persistContactsConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","persistor","persistStore","Input","label","arg","useRef","nanoid","current","className","s","wrapperInput","labelTitle","htmlFor","input","ContactForm","confirmContact","useState","name","setName","number","setNumber","normalizeName","split","map","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","resetForm","onSubmit","e","preventDefault","objData","form","type","onChange","target","value","pattern","title","required","btnAdd","ItemContact","onDeleteContact","btnDel","onClick","ContactList","filterContactsName","list","Filter","filterChangeInput","event","loader","document","querySelector","Loader","createPortal","wrapLoader","modal","height","width","radius","margin","color","size","contactsState","loadingSelector","filterPhoneBook","App","useSelector","contactsBook","filterValueName","dispatch","useDispatch","newContact","setNewContact","deleteContactId","setDeleteContactId","useEffect","isHaveName","some","toast","icon","success","useMemo","normalizedFilter","toLowerCase","finalArray","contact","includes","length","info","warning","useCallback","app","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85455d39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"Input_wrapperInput__1WYXU\",\"labelTitle\":\"Input_labelTitle__3bDB-\",\"input\":\"Input_input__KAHKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemContact_item__13Q_8\",\"btnDel\":\"ItemContact_btnDel__2IseJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapLoader\":\"Loader_wrapLoader__1iiMv\",\"modal\":\"Loader_modal__3eZ6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","\nconst BASE_URL = \"https://621e9d00849220b1fc9db0af.mockapi.io/api/phone/contacts\";\n\nconst fetchData = async (path, options = {}) => {\n  const res = await fetch(`${BASE_URL}/${path}`, options);\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst getItems = (endpoint, options) => fetchData(endpoint, options);\n\nconst saveItem = (endpoint, item, options = {}) => {\n\n  const finalOptions = {\n    method: \"POST\",\n\n    body: JSON.stringify(item),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    ...options,\n  };\n  return fetchData(endpoint, finalOptions);\n};\n\n\nconst deleteItem = (endpoint, id, options = {}) =>\n  fetchData(`${endpoint}/${id}`, { method: \"DELETE\", ...options });\n\nexport { getItems, saveItem, deleteItem };","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getItems, saveItem, deleteItem } from '../../utils/api-fetch';\n\nconst API_ENDPOINT = \"/contacts\";\n\nconst getContacts = createAsyncThunk('contacts/getContactsStatus', () => getItems(API_ENDPOINT)\n);\n\nconst addContact = createAsyncThunk('contact/addContactStatus', (newDepartment) => saveItem(API_ENDPOINT, newDepartment));\n\nconst deleteContact = createAsyncThunk('contact/deleteContactStatus', (deleteDepartment) => deleteItem(API_ENDPOINT, deleteDepartment)\n);\nexport { getContacts,addContact,deleteContact };\n\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterContacts = createAction(\"contacts/filter\")\n","import {combineReducers,createReducer } from \"@reduxjs/toolkit\";\nimport { getContacts,addContact,deleteContact } from \"./operation\";\nimport { filterContacts } from './phoneBookActions';\n\nconst contactsItemReducer = createReducer([], (builder) => {\n  builder.addCase(getContacts.fulfilled, (_, { payload }) => payload);\n\n  builder.addCase(addContact.fulfilled, (state, { payload }) => [...state, payload]);\n\n\n\n  builder.addCase(deleteContact.fulfilled, (state, { payload }) => state.filter((item) => item.id !== payload.id\n  ));\n\n});\n\nconst loadingReducer = createReducer(false, (builder) => {\n  ///GET_CONTACTS\n  builder.addCase(getContacts.pending, () => true);\n  builder.addCase(getContacts.fulfilled, () => false);\n  builder.addCase(getContacts.rejected, () => false);\n  ///ADD_CONTACTS\n  builder.addCase(addContact.pending, () => true);\n  builder.addCase(addContact.fulfilled, () => false);\n  builder.addCase(addContact.rejected, () => false);\n  ///DELETE_CONTACTS\n  builder.addCase(deleteContact.pending, () => true);\n  builder.addCase(deleteContact.fulfilled, () => false);\n  builder.addCase(deleteContact.rejected, () => false);\n});\nconst errorReducer = createReducer(null,(builder) => {\n   ///GET_CONTACTS\n  builder.addCase(getContacts.pending, () => null);\n  builder.addCase(getContacts.rejected, (_,{payload}) => payload);\n  ///ADD_CONTACTS\n  builder.addCase(addContact.pending, () => null);\n  builder.addCase(addContact.rejected, (_,{payload}) => payload);\n  ///DELETE_CONTACTS\n  builder.addCase(deleteContact.pending, () => null);\n  builder.addCase(deleteContact.rejected, (_,{payload}) => payload);\n  \n})\n\nconst filterContactsReducer = createReducer('', (builder) => {\n  builder.addCase(filterContacts, (_, { payload }) => payload);\n})\n\nconst dataReducer = combineReducers({\n    item: contactsItemReducer,\n    loading: loadingReducer,\n    error: errorReducer\n})\nconst phoneBookReducer = combineReducers({\n    data:dataReducer,\n    filter: filterContactsReducer,\n    \n})\n\nexport default phoneBookReducer\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from 'redux-logger'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\n\nimport storage from 'redux-persist/lib/storage' \nimport phoneBookReducer from './phoneBook/phoneBookReducer'\n\nconst logger = createLogger({\n\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n  timestamp: false,\n  duration:true,\n});\n\nconst persistContactsConfig = {\n  key: 'contacts/filter',\n  storage,\n  whitelist: ['filter']\n}\n\nconst store = configureStore({\n  reducer: { \n    contacts: persistReducer(persistContactsConfig, phoneBookReducer),\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(logger),\n  // devTools: process.env.NODE_ENV !== 'production',\n  devTools: true,\n})\n    \n const persistor = persistStore(store)\n\n\nexport {store,persistor} \n\n\n","import { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport s from './Input.module.css';\n\nconst Input = ({ label, ...arg }) => {\n  const { current: id } = useRef(nanoid());\n  return (\n    <div className={s.wrapperInput}>\n      <label className={s.labelTitle} htmlFor={id}>\n        {label}:\n      </label>\n      <input className={s.input} id={id} {...arg} />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string,\n  arg: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n};\n\nexport default Input;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../../common/Input';\nimport { nanoid } from 'nanoid';\nimport s from './ContactForm.module.css';\n\n\n\nconst ContactForm = ({confirmContact}) => {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const normalizeName = name => name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objData = {\n      id: nanoid(),\n      name:normalizeName(name),\n      number\n    };\n\n    confirmContact(objData);\n    resetForm();\n\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n    \n\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <form onSubmit={onSubFormData} className={s.form}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        onChange={(e) => setNumber(e.target.value)}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={s.btnAdd}>\n        {' '}\n        Add contact\n      </button>\n      </form>\n      <h2>Contacts</h2>\n    </>\n\n  );\n};\n\nContactForm.propTypes = {\n  confirmContact: PropTypes.func,\n  // normalizeName: PropTypes.func,\n};\n\nexport default ContactForm;\n\n","import PropTypes from 'prop-types';\nimport s from './ItemContact.module.css';\n\nconst ItemContact = ({\n  onDeleteContact,\n  name,\n  number,\n  id}) => {\n\n  return (\n    <li className={s.item} id={id}>\n      {name}: {number}\n      <button\n        className={s.btnDel}\n        onClick={onDeleteContact}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onDeleteContact: PropTypes.func,\n  id:PropTypes.string,\n};\n\nexport default ItemContact;\n\n","import PropTypes from 'prop-types';\nimport ItemContact from './ItemContact';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({onDeleteContact,filterContactsName}) => {\n\n  return (\n    <ul className={s.list}>\n      {filterContactsName && filterContactsName.map(({ id, name, number }) => {\n        return (\n          <ItemContact\n            id={id}\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={()=>onDeleteContact(id)}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  filterContactsName: PropTypes.array,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nimport Input from '../../common/Input';\n\nfunction Filter({filterChangeInput,value}) {\n\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={(event)=>filterChangeInput(event.target.value)}\n      name=\"filter\"\n      value={value}\n    />\n  );\n}\n\nFilter.propTypes = {\n  filterChangeInput: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n\n","import { createPortal } from \"react-dom\";\nimport HashLoader\nfrom \"react-spinners/HashLoader\";\nimport s from \"./Loader.module.css\";\n\n\nconst loader = document.querySelector(\"#loader\");\n\nfunction Loader({loading}) {\n\n  return createPortal(\n    <div className={s.wrapLoader}>\n      <div className={s.modal}>\n        <HashLoader\n\n          height={15}\n          width={5}\n          radius={2}\n          margin={2}\n          color={\"#7814a0\"}\n          loading={loading}\n          size={80}\n        />\n      </div>\n    </div>,\n    loader\n  );\n\n}\n\nexport default Loader","export const contactsState = (state) => state.contacts.data.item;\nexport const loadingSelector = (state) => state.contacts.data.loading;\nexport const errorSelector = (state) => state.contacts.data.error;\nexport const filterPhoneBook = (state) => state.contacts.filter;\n","import { useEffect,useState,useCallback,useMemo} from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Loader from '../../common/Loader';\n\nimport { getContacts,addContact, deleteContact  } from 'redux/phoneBook/operation';\nimport { filterContacts } from 'redux/phoneBook/phoneBookActions';\nimport { contactsState, filterPhoneBook, loadingSelector } from '../../redux/phoneBook/phonebook-selectors'\n\nimport { ToastContainer,toast } from 'react-toastify/dist/react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport s from './App.module.css';\n\nconst App = () => {\n\n  const loading = useSelector(loadingSelector);\n  const contactsBook = useSelector(contactsState);\n  const filterValueName = useSelector(filterPhoneBook);\n  const dispatch = useDispatch();\n\n  const [newContact, setNewContact] = useState(null);\n  const [deleteContactId, setDeleteContactId] = useState(null);\n\n  //GET_CONTACTS\n\n  useEffect(() => {\n    dispatch(getContacts())\n  }, [dispatch])\n  \n  //ADD_CONTACT\n  const confirmContact = (contact) => setNewContact(contact);\n\n  useEffect(() => {\n    if (!newContact) return;\n    const isHaveName = contactsBook.some(({ name }) => name === newContact.name);\n\n    if (isHaveName) {\n      toast.error(`Контакт з ${newContact.name} вже існує :((`, { icon: `❌` });\n      setNewContact(null);\n    }\n    if (!isHaveName) {\n      dispatch(addContact(newContact));\n      toast.success(`Контакт  ${newContact.name} добавлено до списку контактів :))`, {\n        icon: `✅`\n      });\n      setNewContact(null);\n    }\n  }, [contactsBook, dispatch, newContact]);\n\n  // FILTER CITY\n\n  const filterChangeInput = (value) => dispatch(filterContacts(value))\n  \n  //Варіант з хуком USE MEMO\n  const filterContactsName = useMemo(() => {\n    const normalizedFilter = filterValueName.toLowerCase();\n\n    const finalArray = contactsBook && contactsBook.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n\n    if (finalArray.length === 0 && filterValueName !== \"\") {\n      toast.info(`Усі контакти по запиту \"${filterValueName.toUpperCase()}\" були видалені ...✋!!`)\n      toast.warning(`Очистіть поле для запиту, щоб побачити усі контакти :)))`)\n      // dispatch(filterContacts(\"\"))\n    }\n    return finalArray;\n  }, [contactsBook, filterValueName]);\n  \n  //DELETE_CONTACT \n\n  const onDeleteContact = useCallback((id) => setDeleteContactId(id),[]);\n\n  useEffect(() => {\n    if (!deleteContactId) return;\n    dispatch(deleteContact(deleteContactId));\n    toast.success(`Контакт видалений зі списку контактів :))`, {\n        icon: `❎`\n      });\n    setDeleteContactId(null);\n\n  }, [deleteContactId, dispatch])\n  \n  \n \n  // const normalizeName = name => name\n  //     .split(' ')\n  //     .map(word => {\n  //       const firstUpCaseLetter = word.charAt(0).toUpperCase();\n  //       const anoterLetter = word.substring(1);\n  //       return `${firstUpCaseLetter}${anoterLetter}`;\n  //     })\n  //     .join(' ');\n\n  return (\n    <>\n      {loading && <Loader loading={loading}/>}\n      <div className={s.app}>\n      \n      {<ContactForm\n        confirmContact={confirmContact}\n        // normalizeName={normalizeName}\n      />}\n    {contactsBook.length > 0 && (\n        <Filter\n          filterChangeInput={filterChangeInput}\n          value={filterValueName}\n      />\n  )}\n    {!contactsBook.length && !loading && <p>Please, add contact!</p>}\n      <ContactList\n        filterContactsName={filterContactsName}\n        onDeleteContact={onDeleteContact}\n      />\n      <ToastContainer theme=\"dark\"/>\n    </div>\n    </>\n    \n\n  );\n};\n\n\n\n\nexport default App;\n\n// const salaries1 = {\n// Manager: { salary: 1000, tax: \"10%\" },\n// Designer: { salary: 600, tax: \"30%\" },\n// Artist: { salary: 1500, tax: \"15%\" },}\n// const team1 = [\n// { name: \"Misha\", specialization: \"Manager\" },\n// { name: \"Max\", specialization: \"Designer\" },\n// { name: \"Vova\", specialization: \"Designer\"},\n// { name: \"Leo\", specialization: \"Artist\"},]\n\n// const calculateTeamFinanceReport = (salaries, team) => {\n\n//   // let arr = [];\n//   let name = [];\n//   let totalBudgetTeam = 0;\n//   let totalBudgetManager = 0;\n//   let totalBudgetDesigner = 0;\n//   let totalBudgetArtist = 0;\n\n\n//   // arr[objName] = objValue;\n  \n//   const objValues = Object.keys(salaries1)\n//   const arr = objValues.map(item => [item])\n//   // console.log(arr);\n\n//   const array = team1.map(item => {\n//     console.log(item.specialization === salaries1.Manager);\n//     if(item.specialization === \"Designer\"){\n//       return name.push(item.name)\n//     }\n//     if else()\n//     console.log(name);\n//   })\n  \n//   // const manager = team1.map(item => {\n//   //   if (item.specialization === arr[0]) {\n//   //     salaries1.Manager.salary + salaries1.Manager.salary\n//   //   }\n//   //   console.log(item);\n//   // })\n//   const objEntries = Object.entries(salaries1);\n//   // console.log(objEntries);\n\n  \n  \n// }\n\n\n// const financeReport1 = calculateTeamFinanceReport(salaries1, team1)\n// console.log(JSON.stringify(financeReport1))\n\n\n// {\n// totalBudgetTeam: 3398, // total salaries with tax of entire team; should be integer\n// (truncate the fractional part after all calculations)\n// totalBudgetProgger: 1176, // total salaries with tax for all members by 'Progger'\n// specialization; should be integer (truncate the fractional part after all calculations)\n// totalBudgetTester: 2222, // total salaries with tax for all members by 'Tester'\n// specialization; should be integer (truncate the fractional part after all calculations)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store,persistor} from './redux/store';\nimport App from './components/App/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}